AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Example Node AWS SAM application Integrates with Terraform deployed infrastructure

Parameters:
  AppName:
    Type: String
    Description: Name of application (no spaces). Value must be globally unique
    Default: example
  Environment:
    Type: String
    Description: Name of application (no spaces). Value must be globally unique
    Default: dev
  IdentityRoleARN:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Identity lambda Role ARN
    Default: /dev/org-gestrich/identity_role_arn
  UserRoleARN:
    Type: AWS::SSM::Parameter::Value<String>
    Description: User lambda Role ARN
    Default: /dev/org-gestrich/user_role_arn
  UserReceiverRoleARN:
    Type: AWS::SSM::Parameter::Value<String>
    Description: User receiver lambda Role ARN
    Default: /dev/org-gestrich/user_role_arn
  SNSTopicARN:
    Type: AWS::SSM::Parameter::Value<String>
    Description: SNS Topic ARN for UserFunction to publish messages on SNS
    Default: /dev/org-gestrich/sns_topic_arn
  DebugSampleRate:
    Type: Number
    Description: Percentage of debug logging printed to CloudWatch on Production environment
    Default: 0.05
  LambdaCanaryType:
    Type: String
    Description: Sets the Canary deployment configuration, e.g. LambdaAllAtOnce, LambdaCanary10Percent5Minutes, LambdaLinear10PercentEvery1Minute, etc. See https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html
    Default: Canary10Percent5Minutes
  CognitoUserPoolClientID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /dev/org-gestrich/cognito_user_pool_client_id
  CognitoUserPoolID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /dev/org-gestrich/cognito_identity_pool_id
  CognitoUserPoolARN:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /dev/org-gestrich/cognito_user_pool_arn
  APITimeout:
    Type: Number
    Description: Sets the timeout in millis for all API endpoints
    Default: 4000

Globals:
  Api:
    OpenApiVersion: 3.0.1
  Function:
    Runtime: nodejs12.x
    Timeout: 4
    ReservedConcurrentExecutions: 10
    MemorySize: 256
    AutoPublishAlias: live
    Tracing: Active
    Layers:
    - Ref: LambdaLayer
    Tags:
      Environment:
        Ref: Environment
      Name:
        Ref: AppName

Resources:

  # API Gateway
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub: ${Environment}-${AppName}-api
      EndpointConfiguration: EDGE
      StageName: dev
      TracingEnabled: true
      MethodSettings:
      - HttpMethod: '*'
        ResourcePath: /*
        DataTraceEnabled: true
        LoggingLevel: ERROR
        MetricsEnabled: true
        ThrottlingBurstLimit: 10
        ThrottlingRateLimit: 20
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: api.yaml
      Tags:
        Environment:
          Ref: Environment
        Name:
          Ref: AppName

  # Lambda Functions
  IdentityFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-identity
      Description: Provides all Cognito functions through 4 API Rest calls
      CodeUri: src/
      Handler: identity/app.lambdaHandler
      Role:
        Ref: IdentityRoleARN
      DeploymentPreference:
        Type: 
          Ref: LambdaCanaryType
        Alarms:
        - Ref: IdentityCanaryErrorsAlarm
      Environment:
        Variables:
          COGNITO_USER_POOL_CLIENT_ID:
            Ref: CognitoUserPoolClientID
          COGNITO_USER_POOL_ID:
            Ref: CognitoUserPoolID
          DEBUG_SAMPLE_RATE:
            Ref: DebugSampleRate

  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-user
      Description: Provides all User functions
      CodeUri: src/
      Handler: user/app.lambdaHandler
      Role:
        Ref: UserRoleARN
      DeploymentPreference:
        Type:
          Ref: LambdaCanaryType
        Alarms:
        - Ref: UserCanaryErrorsAlarm
      Environment:
        Variables:
          DEBUG_SAMPLE_RATE:
            Ref: DebugSampleRate
          SNS_TOPIC:
            Ref: SNSTopicARN

  UserReceiverFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-user-receiver
      Description: Integrated with SNS
      CodeUri: src/
      Handler: user_receiver/app.lambdaHandler
      Role:
        Ref: UserReceiverRoleARN
      DeploymentPreference:
        Type:
          Ref: LambdaCanaryType
        Alarms:
        - Ref: UserReceiverCanaryErrorsAlarm
      Environment:
        Variables:
          DEBUG_SAMPLE_RATE:
            Ref: DebugSampleRate

  # Lambda Layer
  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${Environment}-${AppName}-layer
      Description:
        Fn::Sub: Lambda layer for ${Environment}-${AppName}-layer application
      ContentUri: dependencies
      CompatibleRuntimes:
      - nodejs12.x
      RetentionPolicy: Retain
  
  # CloudWatch Alarms
  IdentityCanaryErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: 
        Fn::Sub: ${Environment}-${AppName}-identity-canary-alarm
      AlarmDescription: Identity Lambda function canary errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      Dimensions:
        - Name: Resource
          Value:
            Fn::Sub: ${IdentityFunction}:live
        - Name: FunctionName
          Value: 
            Ref: IdentityFunction
        - Name: ExecutedVersion
          Value:
            Fn::GetAtt:
            - IdentityFunction
            - Version
            - Version
  UserCanaryErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: 
        Fn::Sub: ${Environment}-${AppName}-user-canary-alarm
      AlarmDescription: User Lambda function canary errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      Dimensions:
        - Name: Resource
          Value:
            Fn::Sub: ${UserFunction}:live
        - Name: FunctionName
          Value: 
            Ref: UserFunction
        - Name: ExecutedVersion
          Value:
            Fn::GetAtt:
            - UserFunction
            - Version
            - Version
  UserReceiverCanaryErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: 
        Fn::Sub: ${Environment}-${AppName}-user-receiver-canary-alarm
      AlarmDescription: UserReceiver Lambda function canary errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      Dimensions:
        - Name: Resource
          Value:
            Fn::Sub: ${UserReceiverFunction}:live
        - Name: FunctionName
          Value: 
            Ref: UserReceiverFunction
        - Name: ExecutedVersion
          Value:
            Fn::GetAtt:
            - UserReceiverFunction
            - Version
            - Version

Outputs:
  ApiID:
    Description: API Gateway Resource ID
    Value:
      Ref: Api
  ApiURL:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${Api}.execute-api.${AWS::Region}.amazonaws.com/dev/
  IdentityFunction:
    Description: Identity Lambda Function ARN
    Value:
      Fn::GetAtt:
      - IdentityFunction
      - Arn
  UserFunction:
    Description: User Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UserFunction
      - Arn
  UserReceiverFunction:
    Description: User receiver Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UserReceiverFunction
      - Arn

